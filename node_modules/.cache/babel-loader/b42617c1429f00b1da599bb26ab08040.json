{"ast":null,"code":"var _jsxFileName = \"/Users/muhaoguo/Documents/study/web developer/Project/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js'; // import Clarifai from 'clarifai';\n\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 5\n      } // interactivity:{\n      //     onhover:{\n      //       enable:true\n      //   },\n      // move:{\n      //   enable:false\n      // }\n      // }\n      // }\n\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    // user 是 profile\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box; //只要response中的那一组数\n\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        //return an object\n        leftCol: clarifaiFace.left_col * width,\n        rightCol: width - clarifaiFace.right_col * width,\n        topRow: clarifaiFace.top_row * height,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFacebox = box_obj => {\n      this.setState({\n        box: box_obj\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      //onPictureSubmit\n      this.setState({\n        imageUrl: this.state.input\n      }); // app.models\n      // .predict(\n      //   Clarifai.FACE_DETECT_MODEL, \n      //   this.state.input)   //这里不能是this.state.imageUrl\n\n      fetch('https://murmuring-sea-01312.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()) //////////////\n      .then(response => {\n        if (response) {\n          fetch('https://murmuring-sea-01312.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFacebox(this.calculateFaceLocation(response));\n      }) // console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n      .catch(err => console.log(err)); // there was an error\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          route = _this$state.route,\n          box = _this$state.box,\n          imageUrl = _this$state.imageUrl;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), route === 'signin' ? React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }) : route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/muhaoguo/Documents/study/web developer/Project/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","Particles","FaceRecognition","SignIn","Register","particlesOptions","particles","number","value","density","enable","value_area","line_linked","shadow","color","blur","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","rightCol","right_col","topRow","top_row","bottomRow","bottom_row","displayFacebox","box_obj","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank'\nimport Particles from 'react-particles-js';\n// import Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\n\nconst particlesOptions={\n                particles: {\n                  number:{\n                      value:100,\n                      density:{\n                        enable:true,\n                        value_area:800\n                      }\n                  },\n                  line_linked: {\n                      shadow: {\n                        enable: true,\n                        color: \"#3CA9D1\",\n                        blur: 5\n                      }\n\n                  // interactivity:{\n                  //     onhover:{\n                  //       enable:true\n                  //   },\n                  // move:{\n                  //   enable:false\n                  // }\n                  // }\n                  // }\n                }\n              }\n}\n\nconst initialState={\n      input:'',\n      imageUrl:'',\n      box:{},\n      route:'signin',\n      isSignedIn:false,\n      user:{      // user 是 profile\n          id:'',\n          name:'',\n          email:'',\n          entries:0,\n          joined:''\n      }\n} \n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state=initialState\n  }\n\n  loadUser = (data) => {\n    this.setState({user:{\n        id:data.id,\n        name:data.name,\n        email:data.email,\n        entries:data.entries,\n        joined:data.joined\n      }\n    })\n }\n\n  // componentDidMount(){\n  //   fetch('http://localhost:3000/')\n  //   .then(response=>response.json())\n  //   .then(console.log)\n  // }\n\n  calculateFaceLocation=(data)=>{\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box; //只要response中的那一组数\n    const image =document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {                                      //return an object\n      leftCol:clarifaiFace.left_col*width,\n      rightCol:width-clarifaiFace.right_col*width,\n      topRow:clarifaiFace.top_row*height,\n      bottomRow:height-clarifaiFace.bottom_row*height\n    }\n  }\n\n  displayFacebox = (box_obj)=>{\n    this.setState({box:box_obj});\n  }\n\n  onInputChange = (event)=>{\n    this.setState({input:event.target.value});\n  }\n\n\n  onButtonSubmit = ()=>{     //onPictureSubmit\n    this.setState({imageUrl:this.state.input})\n    // app.models\n    // .predict(\n    //   Clarifai.FACE_DETECT_MODEL, \n    //   this.state.input)   //这里不能是this.state.imageUrl\n    fetch( 'https://murmuring-sea-01312.herokuapp.com/imageurl',{\n          method:'post',\n          headers:{'Content-Type':'application/json'},\n          body:JSON.stringify({\n            input:this.state.input\n          })\n        })\n    .then(response=>response.json())\n//////////////\n    .then(response => {\n      if (response){\n        fetch( 'https://murmuring-sea-01312.herokuapp.com/image',{\n          method:'put',\n          headers:{'Content-Type':'application/json'},\n          body:JSON.stringify({\n            id:this.state.user.id\n          })\n        })\n          .then(response=>response.json())\n          .then(count=>{\n            this.setState(Object.assign(this.state.user,{entries:count}))\n          })\n          .catch(console.log)\n      }\n      this.displayFacebox(this.calculateFaceLocation(response))\n    })\n      // console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n    .catch(err=>console.log(err))\n      // there was an error\n  }\n\n  onRouteChange=(route)=>{\n    if (route === 'signout'){\n      this.setState(initialState)\n    }else if (route === 'home'){\n      this.setState({isSignedIn:true})\n    }\n    this.setState({route:route})\n  }\n\n\nrender(){\n    const {isSignedIn,route,box,imageUrl} = this.state\n    return ( \n      <div className=\"App\">\n        <Particles className='particles' params={particlesOptions}/> \n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        {route==='signin'\n          ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          : (route ==='home'\n            ? <div>\n                <Logo />\n                <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n                <ImageLinkForm \n                  onInputChange={this.onInputChange} \n                  onButtonSubmit={this.onButtonSubmit}\n                />\n                <FaceRecognition box={box} imageUrl={imageUrl}/>\n              </div>\n            :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )          \n        }\n      </div>\n    );\n  } \n  \n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}