{"ast":null,"code":"var _jsxFileName = \"/Users/muhaoguo/Documents/study/web developer/Project/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nconst app = new Clarifai.App({\n  apiKey: '7f8f59cc519d4fd6a47bd45939be5e2c'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 5\n      } // interactivity:{\n      //     onhover:{\n      //       enable:true\n      //   },\n      // move:{\n      //   enable:false\n      // }\n      // }\n      // }\n\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box; //只要response中的那一组数\n\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        //return an object\n        leftCol: clarifaiFace.left_col * width,\n        rightCol: width - clarifaiFace.right_col * width,\n        topRow: clarifaiFace.top_row * height,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFacebox = box_obj => {\n      this.setState({\n        box: box_obj\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      //onPictureSubmit\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input) //这里不能是this.state.imageUrl\n      .then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState({\n              user: {\n                entries: count\n              }\n            });\n          });\n        }\n\n        this.displayFacebox(this.calculateFaceLocation(response));\n      }) // console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n      .catch(err => console.log(err)); // there was an error\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        // user 是 profile\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          route = _this$state.route,\n          box = _this$state.box,\n          imageUrl = _this$state.imageUrl;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), route === 'signin' ? React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }) : route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/muhaoguo/Documents/study/web developer/Project/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","Particles","Clarifai","FaceRecognition","SignIn","Register","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","line_linked","shadow","color","blur","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","rightCol","right_col","topRow","top_row","bottomRow","bottom_row","displayFacebox","box_obj","box","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","catch","err","console","log","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank'\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\n\n\nconst app = new Clarifai.App({\n apiKey: '7f8f59cc519d4fd6a47bd45939be5e2c'\n});\n\nconst particlesOptions={\n                particles: {\n                  number:{\n                      value:100,\n                      density:{\n                        enable:true,\n                        value_area:800\n                      }\n                  },\n                  line_linked: {\n                      shadow: {\n                        enable: true,\n                        color: \"#3CA9D1\",\n                        blur: 5\n                      }\n\n                  // interactivity:{\n                  //     onhover:{\n                  //       enable:true\n                  //   },\n                  // move:{\n                  //   enable:false\n                  // }\n                  // }\n                  // }\n                }\n              }\n            }\n\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      input:'',\n      imageUrl:'',\n      box:{},\n      route:'signin',\n      isSignedIn:false,\n      user:{      // user 是 profile\n          id:'',\n          name:'',\n          email:'',\n          entries:0,\n          joined:''\n      }\n    } \n  }\n\n  loadUser = (data) => {\n    this.setState({user:{\n        id:data.id,\n        name:data.name,\n        email:data.email,\n        entries:data.entries,\n        joined:data.joined\n      }\n    })\n  }\n\n\n\n  // componentDidMount(){\n  //   fetch('http://localhost:3000/')\n  //   .then(response=>response.json())\n  //   .then(console.log)\n  // }\n\n  calculateFaceLocation=(data)=>{\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box; //只要response中的那一组数\n    const image =document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {                                      //return an object\n      leftCol:clarifaiFace.left_col*width,\n      rightCol:width-clarifaiFace.right_col*width,\n      topRow:clarifaiFace.top_row*height,\n      bottomRow:height-clarifaiFace.bottom_row*height\n    }\n  }\n\n  displayFacebox = (box_obj)=>{\n    this.setState({box:box_obj});\n  }\n\n  onInputChange = (event)=>{\n    this.setState({input:event.target.value});\n  }\n\n\n  onButtonSubmit = ()=>{     //onPictureSubmit\n    this.setState({imageUrl:this.state.input})\n    app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input)   //这里不能是this.state.imageUrl\n    .then(response => {\n      if (response){\n        fetch( 'http://localhost:3000/image',{\n          method:'put',\n          headers:{'Content-Type':'application/json'},\n          body:JSON.stringify({\n            id:this.state.user.id\n          })\n        })\n          .then(response=>response.json())\n          .then(count=>{\n            this.setState({user:{\n              entries:count\n            }})\n          })\n      }\n      this.displayFacebox(this.calculateFaceLocation(response))\n    })\n      // console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n    .catch(err=>console.log(err))\n      // there was an error\n  }\n\n\n\n    onRouteChange=(route)=>{\n      if (route === 'signout'){\n        this.setState({isSignedIn:false})\n      }else if (route === 'home'){\n        this.setState({isSignedIn:true})\n      }\n      this.setState({route:route})\n    }\n\n\n  render(){\n    const {isSignedIn,route,box,imageUrl} = this.state\n    return ( \n      <div className=\"App\">\n        <Particles className='particles' params={particlesOptions}/> \n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        {route==='signin'\n          ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          : (route ==='home'\n            ? <div>\n                <Logo />\n                <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n                <ImageLinkForm \n                  onInputChange={this.onInputChange} \n                  onButtonSubmit={this.onButtonSubmit}\n                />\n                <FaceRecognition box={box} imageUrl={imageUrl}/>\n              </div>\n            :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )          \n        }\n      </div>\n    );\n  } \n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}